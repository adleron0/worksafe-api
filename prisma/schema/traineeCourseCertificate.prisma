model TraineeCourseCertificate {
  id                   Int         @id @default(autoincrement())
  courseId             Int
  course               Course      @relation(fields: [courseId], references: [id])
  traineeId            Int
  trainee              Trainee     @relation(fields: [traineeId], references: [id])
  classId              Int
  class                CourseClass @relation(fields: [classId], references: [id])
  companyId            Int
  company              Company     @relation(fields: [companyId], references: [id])
  expirationDate       DateTime?
  fabricJsonFront      Json?       @map("fabric_json_front") @db.JsonB
  fabricJsonBack       Json?       @map("fabric_json_back") @db.JsonB
  canvasWidth     Int     @default(800) @map("canvas_width")
  canvasHeight    Int     @default(600) @map("canvas_height")
  variableToReplace    Json?       @map("variable_to_replace") @db.JsonB
  showOnWebsiteConsent Boolean     @default(true)
  pdfUrl               String?     @db.VarChar(255)
  key                  String      @default(uuid()) // Definindo o campo 'key' como UUID auto gerado

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  inactiveAt DateTime?

  // ÍNDICES ESSENCIAIS
  @@index([traineeId])                    // Certificados do aluno
  @@index([courseId])                     // Certificados por curso
  @@index([classId])                      // Certificados por turma
  @@index([companyId])                    // Certificados da empresa
  @@index([expirationDate])               // Certificados vencendo
  @@index([key])                          // Busca por chave única
}
