model User {
  id          Int          @id @default(autoincrement())
  name        String
  searchName  String?       @db.VarChar(255)
  active      Boolean      @default(true)
  email       String
  password    String
  imageUrl    String?
  phone       String
  cpf         String
  companyId   Int?
  company     Company?     @relation(fields: [companyId], references: [id])
  roleId      Int?
  role        Role?        @relation(fields: [roleId], references: [id])
  permissions UserPermission[]  // Relacionamento com UserPermission
  sessions    Session[]    // Relacionamento com Session
  systemLogs  System_Logs[] // Relacionamento com System_Logs
  confinusRegister  Confinus_ConfinedSpace[] @relation("RegisteredByUser")
  confinusApprove   Confinus_ConfinedSpace[] @relation("ApprovedByUser")

  @@unique([email, companyId]) // Garante que o email seja único dentro da mesma empresa
  @@unique([id, companyId])    // Índice composto para id e companyId

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  inactiveAt  DateTime?
}
