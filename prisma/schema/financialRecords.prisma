// Tabela Company
model FinancialRecords {
  id             Int                      @id @default(autoincrement())
  accrualDate    String                   @db.VarChar(10) //formato: YYYY-MM
  companyId      Int
  company        Company                  @relation(fields: [companyId], references: [id])
  gateway        gateways
  status         financialRecordsStatus   @default(processing)
  subscriptionId Int?
  subscription   CourseClassSubscription? @relation(fields: [subscriptionId], references: [id])
  traineeId      Int?
  trainee        Trainee?                 @relation(fields: [traineeId], references: [id])
  customerId     Int?
  customer       Customer?                @relation(fields: [customerId], references: [id])
  paymentMethod  paymentMethods
  value          Decimal?                 @db.Decimal(18, 2)
  dueDate        DateTime?
  paidAt         DateTime?
  billUrl        String?                  @db.Text
  billNumber     String?                  @db.VarChar(255)
  pixUrl         String?                  @db.Text
  pixNumber      String?                  @db.VarChar(255)
  requestData    Json?                    @map("request_data") @db.JsonB // Dados do payload do gateway
  responseData   Json?                    @map("response_data") @db.JsonB // Dados do payload do gateway
  errorData      Json?                    @map("error_data") @db.JsonB // Dados do payload do gateway
  observations   String?                  @db.VarChar(255)
  description    String?                  @db.VarChar(255)
  externalId     String?                  @db.VarChar(255) // ID externo do registro financeiro
  key            String                   @default(uuid()) // Definindo o campo 'key' como UUID auto gerado

  // Relacionamento com cupom
  couponId        Int?
  coupon          Coupon?   @relation(fields: [couponId], references: [id])

  // Valores aplicados (snapshot no momento do uso)
  originalValue       Decimal?  @db.Decimal(18, 2)  // Valor original antes do desconto
  discount            Decimal?  @db.Decimal(18, 2)  // Valor do desconto aplicado
  discountApplied     Decimal?  @db.Decimal(18, 2)  // Desconto aplicado (legado)
  commissionPercentage Decimal? @db.Decimal(5, 2)   // Percentual de comissão
  commissionValue     Decimal?  @db.Decimal(18, 2)  // Comissão calculada

  // Seller beneficiado (pode vir do cupom ou de outra fonte)
  sellerId        Int?
  seller          User?     @relation(fields: [sellerId], references: [id])

  // Transações de split
  splitTransactions SplitTransaction[] // Transações de split associadas ao registro

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  inactiveAt DateTime?

  // ÍNDICES ESSENCIAIS
  @@index([companyId, status])           // Dashboard financeiro por empresa
  @@index([status, paidAt])               // Relatórios de pagamentos
  @@index([traineeId])                    // Histórico do aluno
  @@index([subscriptionId])               // Pagamentos por inscrição
  @@index([externalId])                   // Busca por ID do gateway
  @@index([accrualDate, companyId])       // Relatórios mensais
  @@index([couponId, status])             // Performance de cupons
  @@index([sellerId, status])             // Comissões de sellers
  @@index([gateway, status])              // Análise por gateway
  @@index([createdAt])                    // Ordenação temporal
}
